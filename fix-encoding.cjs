/**
 * Script para CORREGIR autom√°ticamente problemas de encoding
 * Ejecutar: node fix-encoding.cjs
 */

const fs = require('fs');
const path = require('path');

// Archivos a corregir (seg√∫n el an√°lisis)
const filesToFix = [
  'src/App.jsx',
  'src/components/AIGenerator.jsx',
  'src/components/__tests__/example.test.js',
  'src/test/setup.js'
];

// Mapeo de correcciones (car√°cter corrupto ‚Üí car√°cter correcto)
const corrections = {
  // Vocales con tilde
  'AÔøΩADIR': 'A√ëADIR',
  'aÔøΩadir': 'a√±adir',
  'CinematogrÔøΩfico': 'Cinematogr√°fico',
  'cinematogrÔøΩfico': 'cinematogr√°fico',
  'CÔøΩlido': 'C√°lido',
  'cÔøΩlido': 'c√°lido',
  'homogÔøΩneo': 'homog√©neo',
  'ClÔøΩsico': 'Cl√°sico',
  'clÔøΩsico': 'cl√°sico',
  'clÔøΩsica': 'cl√°sica',
  'FotografÔøΩa': 'Fotograf√≠a',
  'fotografÔøΩa': 'fotograf√≠a',
  'EnergÔøΩa': 'Energ√≠a',
  'energÔøΩa': 'energ√≠a',
  'EnsueÔøΩo': 'Ensue√±o',
  'ensueÔøΩo': 'ensue√±o',
  'NostÔøΩlgico': 'Nost√°lgico',
  'nostÔøΩlgico': 'nost√°lgico',
  'aÔøΩos': 'a√±os',
  'NeÔøΩn': 'Ne√≥n',
  'neÔøΩn': 'ne√≥n',
  'ÔøΩntimo': '√çntimo',
  'ÔøΩntimo': '√≠ntimo',
  'AcciÔøΩn': 'Acci√≥n',
  'acciÔøΩn': 'acci√≥n',
  'nÔøΩtido': 'n√≠tido',
  'FantasÔøΩa': 'Fantas√≠a',
  'fantasÔøΩa': 'fantas√≠a',
  'EtÔøΩreo': 'Et√©reo',
  'etÔøΩreo': 'et√©reo',
  'OnÔøΩrico': 'On√≠rico',
  'onÔøΩrico': 'on√≠rico',
  'dramÔøΩtico': 'dram√°tico',
  'dramÔøΩtica': 'dram√°tica',
  'AtmosfÔøΩrico': 'Atmosf√©rico',
  'atmosfÔøΩrico': 'atmosf√©rico',
  'prÔøΩcticas': 'pr√°cticas',
  'crÔøΩditos': 'cr√©ditos',
  'crÔøΩdito': 'cr√©dito',
  'CrÔøΩditos': 'Cr√©ditos',
  'CrÔøΩdito': 'Cr√©dito',
  'CRÔøΩDITOS': 'CR√âDITOS',
  'CRÔøΩDITO': 'CR√âDITO',
  'especificaciÔøΩn': 'especificaci√≥n',
  'GeneraciÔøΩn': 'Generaci√≥n',
  'generaciÔøΩn': 'generaci√≥n',
  'sesiÔøΩn': 'sesi√≥n',
  'SesiÔøΩn': 'Sesi√≥n',
  'SESIÔøΩN': 'SESI√ìN',
  'suscrÔøΩbete': 'suscr√≠bete',
  'recibiÔøΩ': 'recibi√≥',
  'BÔøΩsicos': 'B√°sicos',
  'bÔøΩsicos': 'b√°sicos',
  'bÔøΩsico': 'b√°sico',
  'BOTÔøΩN': 'BOT√ìN',
  'botÔøΩn': 'bot√≥n',
  'BotÔøΩn': 'Bot√≥n',
  'ANÔøΩLISIS': 'AN√ÅLISIS',
  'anÔøΩlisis': 'an√°lisis',
  'AnÔøΩlisis': 'An√°lisis',
  'aparecerÔøΩ': 'aparecer√°',
  'pestaÔøΩa': 'pesta√±a',
  'aÔøΩn': 'a√∫n',
  'ÔøΩltimos': '√∫ltimos',
  'ÔøΩltimo': '√∫ltimo',
  'ÔøΩxito': '√©xito',
  'ÔøΩPago': '¬°Pago',
  'PÔøΩGINA': 'P√ÅGINA',
  'pÔøΩgina': 'p√°gina',
  'mÔøΩvil': 'm√≥vil',
  'GalerÔøΩa': 'Galer√≠a',
  'galerÔøΩa': 'galer√≠a',
  'GALERÔøΩA': 'GALER√çA',
  'colecciÔøΩn': 'colecci√≥n',
  'GuÔøΩa': 'Gu√≠a',
  'guÔøΩa': 'gu√≠a',
  'quÔøΩ': 'qu√©',
  'ÔøΩQuÔøΩ': '¬øQu√©',
  'versiÔøΩn': 'versi√≥n',
  'ÔøΩpica': '√âpica',
  'dragÔøΩn': 'drag√≥n',
  'montaÔøΩas': 'monta√±as',
  'mÔøΩgico': 'm√°gico',
  'luciÔøΩrnagas': 'luci√©rnagas',
  'ÔøΩrboles': '√°rboles',
  'crearÔøΩ': 'crear√°',
  'imÔøΩgenes': 'im√°genes',
  'alienÔøΩgena': 'alien√≠gena',
  'rÔøΩpidos': 'r√°pidos',
  'artÔøΩstico': 'art√≠stico',
  'fotogrÔøΩfico': 'fotogr√°fico',
  'IluminaciÔøΩn': 'Iluminaci√≥n',
  'iluminaciÔøΩn': 'iluminaci√≥n',
  'deberÔøΩa': 'deber√≠a',
  'despuÔøΩs': 'despu√©s',
  
  // Signos de interrogaci√≥n y exclamaci√≥n
  'ÔøΩ': '¬ø',
  'ÔøΩ': '¬°',
  
  // √ë
  'aÔøΩo': 'a√±o',
  'AÔøΩo': 'A√±o',
  'niÔøΩo': 'ni√±o',
  'espaÔøΩol': 'espa√±ol',
  'EspaÔøΩol': 'Espa√±ol',
  'diseÔøΩo': 'dise√±o',
  'DiseÔøΩo': 'Dise√±o',
  'maÔøΩana': 'ma√±ana',
  'pequeÔøΩo': 'peque√±o',
  'sueÔøΩo': 'sue√±o',
  
  // Otros caracteres comunes
  'menÔøΩ': 'men√∫',
  'MenÔøΩ': 'Men√∫',
  'perÔøΩ': 'Per√∫',
  'PerÔøΩ': 'Per√∫',
  'cafÔøΩ': 'caf√©',
  'CafÔøΩ': 'Caf√©',
  'bebÔøΩ': 'beb√©',
  'BebÔøΩ': 'Beb√©',
  'despuÔøΩs': 'despu√©s',
  'DespuÔøΩs': 'Despu√©s',
  'tambiÔøΩn': 'tambi√©n',
  'TambiÔøΩn': 'Tambi√©n',
  'asÔøΩ': 'as√≠',
  'AsÔøΩ': 'As√≠',
  'paÔøΩs': 'pa√≠s',
  'PaÔøΩs': 'Pa√≠s',
  'raÔøΩz': 'ra√≠z',
  'RaÔøΩz': 'Ra√≠z',
  'dÔøΩa': 'd√≠a',
  'DÔøΩa': 'D√≠a',
  'MarÔøΩa': 'Mar√≠a',
  'adiÔøΩs': 'adi√≥s',
  'AdiÔøΩs': 'Adi√≥s',
  'corazÔøΩn': 'coraz√≥n',
  'CorazÔøΩn': 'Coraz√≥n',
  'canciÔøΩn': 'canci√≥n',
  'CanciÔøΩn': 'Canci√≥n',
  'descripciÔøΩn': 'descripci√≥n',
  'DescripciÔøΩn': 'Descripci√≥n',
  'informaciÔøΩn': 'informaci√≥n',
  'InformaciÔøΩn': 'Informaci√≥n',
  'ÔøΩnico': '√∫nico',
  'ÔøΩnico': '√önico',
  'pÔøΩblico': 'p√∫blico',
  'PÔøΩblico': 'P√∫blico',
  'ÔøΩltima': '√∫ltima',
  'ÔøΩltima': '√öltima',
  
  // Casos especiales de comentarios
  '??': '‚úì',
  '?': '‚úì',
};

let totalChanges = 0;
let filesFixed = 0;

console.log('\nüîß INICIANDO CORRECCI√ìN DE ENCODING...\n');
console.log('================================================================================\n');

filesToFix.forEach(filePath => {
  try {
    if (!fs.existsSync(filePath)) {
      console.log(`‚ö†Ô∏è  Archivo no encontrado: ${filePath}`);
      return;
    }

    let content = fs.readFileSync(filePath, 'utf8');
    let originalContent = content;
    let changesInFile = 0;

    // Aplicar todas las correcciones
    Object.entries(corrections).forEach(([wrong, correct]) => {
      const regex = new RegExp(wrong.replace(/[.*+?^${}()|[\]\\]/g, '\\$&'), 'g');
      const matches = (content.match(regex) || []).length;
      if (matches > 0) {
        content = content.replace(regex, correct);
        changesInFile += matches;
      }
    });

    if (changesInFile > 0) {
      // Guardar archivo corregido
      fs.writeFileSync(filePath, content, 'utf8');
      console.log(`‚úÖ ${filePath}`);
      console.log(`   ‚îî‚îÄ ${changesInFile} correcciones aplicadas\n`);
      totalChanges += changesInFile;
      filesFixed++;
    } else {
      console.log(`‚ÑπÔ∏è  ${filePath} - Sin cambios necesarios\n`);
    }

  } catch (error) {
    console.error(`‚ùå Error procesando ${filePath}:`, error.message);
  }
});

console.log('================================================================================');
console.log('üìä RESUMEN DE CORRECCIONES:');
console.log(`   Archivos procesados: ${filesToFix.length}`);
console.log(`   Archivos corregidos: ${filesFixed}`);
console.log(`   Total de correcciones: ${totalChanges}`);
console.log('================================================================================\n');

if (filesFixed > 0) {
  console.log('‚ú® ¬°Correcci√≥n completada exitosamente!');
  console.log('\nüìã PR√ìXIMOS PASOS:');
  console.log('   1. Revisa los cambios con: git diff');
  console.log('   2. Haz commit: git add . && git commit -m "fix: corregir encoding UTF-8"');
  console.log('   3. Push a GitHub: git push');
  console.log('   4. Vercel har√° deploy autom√°ticamente\n');
} else {
  console.log('‚ÑπÔ∏è  No se encontraron problemas que corregir.\n');
}
